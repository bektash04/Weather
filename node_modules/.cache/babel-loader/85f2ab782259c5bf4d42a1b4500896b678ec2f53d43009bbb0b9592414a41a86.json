{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/React/Weather/src/commponents/Weather/Weather.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Weather = ({\n  weather\n}) => {\n  const timeFormater = sec => {\n    const time = new Date(sec * 1000);\n    const hours = time.getHours();\n    const minutes = time.getMinutes();\n    return `${hours} : ${minutes}`;\n  };\n  const kelvinToCelsius = kelvin => {\n    return kelvin - 273.15; // Формула перевода\n  };\n\n  // Функция для перевода температуры из Кельвинов в градусы Фаренгейта\n  const kelvinToFahrenheit = kelvin => {\n    return (kelvin - 273.15) * 9 / 5 + 32; // Формула перевода\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: weather && weather.cod !== '200' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [weather.name, \", \", weather.sys.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://openweathermap.org/img/w/${weather.weather[0].icon}.png`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"lon: \", weather.coord.lon, \",\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"lat:\", weather.coord.lat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0422\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430: \", weather.main.temp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"feels_like: \", weather.main.feels_like, \"K\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0417ressure: \", weather.main.pressure, \"\\u0433\\u041F\\u0430\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weather.main.humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0421loudy: \", weather.clouds.all, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wind: \", weather.wind.speed, \"m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0430\\u044F \\u0432\\u0440\\u0435\\u043C\\u044F: \", timeFormater(weather.dt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"sunset: \", timeFormater(weather.sys.sunset)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sunrise: \", timeFormater(weather.sys.sunrise)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n\n// {Object.keys(weather).length > 0 ? (\n//     <div>\n//         <h1>{weather.name}, {weather.sys.country}</h1>\n//       <p>lon: {weather.coord.lon},</p>\n//       <p>lat:{weather.coord.lat}</p>\n//       <p>{weather.weather[0].description}</p>\n//       <p>Температура: {weather.main.temp -273 .toFixed(0)}</p>\n//       <p>По ощущениям: {weather.main.feels_like}K</p>\n//       <p>Давление: {weather.main.pressure}</p>\n//       <p>Влажность: {weather.main.humidity}%</p>\n//       <p>Скорость ветра: {weather.wind.speed}m/s</p>\n//       <p>Облачность: {weather.clouds.all}%</p>\n//      <p>Восход: {new Date(weather.sys.sunrise * 1000).toLocaleTimeString()} </p>\n//       <p>Закать: {new Date(weather.sys.sunset * 1000).toLocaleTimeString()}</p>\n//     </div>\n//   ) : null}\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Weather","weather","timeFormater","sec","time","Date","hours","getHours","minutes","getMinutes","kelvinToCelsius","kelvin","kelvinToFahrenheit","children","cod","className","name","sys","country","fileName","_jsxFileName","lineNumber","columnNumber","src","icon","coord","lon","lat","description","main","temp","feels_like","pressure","humidity","clouds","all","wind","speed","dt","sunset","sunrise","_c","$RefreshReg$"],"sources":["/Users/admin/Desktop/React/Weather/src/commponents/Weather/Weather.jsx"],"sourcesContent":["import React from 'react'\n\nconst Weather = ({weather}) => {\n    const timeFormater = (sec) => {\n        const time = new Date(sec * 1000)\n        const hours  = time.getHours()\n        const minutes= time.getMinutes()\n        return `${hours} : ${minutes}`\n    }\n    const kelvinToCelsius = (kelvin) => {\n        return kelvin - 273.15; // Формула перевода\n      };\n    \n      // Функция для перевода температуры из Кельвинов в градусы Фаренгейта\n      const kelvinToFahrenheit = (kelvin) => {\n        return (kelvin - 273.15) * 9 / 5 + 32; // Формула перевода\n      };\n\n  return (\n    <>\n    {\n        weather && weather.cod !== '200' ?\n\n        <div className='weather'>\n         <h1>{weather.name}, {weather.sys.country}</h1>\n         <img src={`http://openweathermap.org/img/w/${weather.weather[0].icon}.png`} />\n         <p>lon: {weather.coord.lon},</p>\n         <p>lat:{weather.coord.lat}</p>\n         <p>{weather.weather[0].description}</p>\n         <p>Температура: {weather.main.temp }</p>\n         <p>feels_like: {weather.main.feels_like}K</p>\n         <p>Зressure: {weather.main.pressure}гПа</p>\n         <p>Humidity: {weather.main.humidity}%</p>\n         <p>Сloudy: {weather.clouds.all}%</p>\n         <p>Wind: {weather.wind.speed}m/s</p>\n         <p>Текущая время: { timeFormater(weather.dt)}</p>\n     \n         <p>sunset: { timeFormater(weather.sys.sunset)}</p>\n         <p>Sunrise: { timeFormater(weather.sys.sunrise)}</p>\n\n      </div>\n      :\n      <></>\n    }\n       \n    \n    </>\n  )\n}\n\n// {Object.keys(weather).length > 0 ? (\n//     <div>\n//         <h1>{weather.name}, {weather.sys.country}</h1>\n//       <p>lon: {weather.coord.lon},</p>\n//       <p>lat:{weather.coord.lat}</p>\n//       <p>{weather.weather[0].description}</p>\n//       <p>Температура: {weather.main.temp -273 .toFixed(0)}</p>\n//       <p>По ощущениям: {weather.main.feels_like}K</p>\n//       <p>Давление: {weather.main.pressure}</p>\n//       <p>Влажность: {weather.main.humidity}%</p>\n//       <p>Скорость ветра: {weather.wind.speed}m/s</p>\n//       <p>Облачность: {weather.clouds.all}%</p>\n//      <p>Восход: {new Date(weather.sys.sunrise * 1000).toLocaleTimeString()} </p>\n//       <p>Закать: {new Date(weather.sys.sunset * 1000).toLocaleTimeString()}</p>\n//     </div>\n//   ) : null}\n\nexport default Weather"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}